version: "3"
services: 
    webapi:
        container_name: myCMS.js
        build: ./app
        restart: always
        working_dir: /src
        volumes: 
            - ./app:/src
        ports:
            - "9000:9000"
        command: sh -c "npm install && npm run dev"
        networks:
            - cms_app_net
        depends_on:
            - mongo
            - redis
#            - jenkins
        links:
            - "mongo"
            - "redis"

    mongo:
        container_name: mongoCMS
        image: mongo:bionic
        restart: always
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: secret
            MONGO_INITDB_DATABASE: cms
        ports:
            - "27017:27017"
        volumes:
            - ./mongo-config/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
            - data-volume-mongoCMS:/data/db
        networks:
            - cms_app_net

    redis:
        container_name: redisCMS
        image: redis:alpine
        restart: always
        expose:
            - 6379
        networks:
            - cms_app_net

#    jenkins:
#        container_name: jenkinsCMS
#        image: jenkinsci/jenkins:2.150.1-slim
#        restart: always
#        volumes: 
#            - jenkins_data:/var/jenkins_home
#        ports:
#        - "8081:8080"
#        - "50000:50000"
#        networks:
#            - cms_app_net
#        depends_on:
#            - gitrepository

#    proxyserver:
#        container_name: proxyNGINX_CMS
#        image: nginx:alpine
#        restart: always
#        ports:
#        - "8082:80"
#        networks:
#            - cms_app_net
#        depends_on:
#            - webapi

#    gitrepository:
#        container_name: gitapi
#        image: 
#        networks:
#            - cms_app_net
volumes:
    data-volume-mongoCMS:
        driver: local
#    jenkins_data:
#        driver: local

networks:
    cms_app_net:
        driver: bridge